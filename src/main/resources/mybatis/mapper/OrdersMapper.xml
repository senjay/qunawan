<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finalwork.qunawan.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.finalwork.qunawan.pojo.Orders">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 18 13:55:50 CST 2019.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="orderNo" jdbcType="VARCHAR" property="orderno" />
    <result column="trip" jdbcType="INTEGER" property="trip" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="start_time" jdbcType="DATE" property="startTime" />
    <result column="go_point" jdbcType="VARCHAR" property="goPoint" />
    <result column="go_time" jdbcType="VARCHAR" property="goTime" />
    <result column="total_price" jdbcType="REAL" property="totalPrice" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="user" jdbcType="INTEGER" property="user" />
  </resultMap>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ProResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 18 13:55:50 CST 2019.
    -->
    select orders.id id, orderNo, trip, orders.num num, go_point, total_price, state, create_time, orders.`user` osr,
    trip.title content, s.id sd, s.`value` se , s.keying sg,start_time
    from (orders left join sequence as s on orders.state=s.id) left join trip on orders.trip=trip.id
    where orders.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 18 13:55:50 CST 2019.
    -->
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.finalwork.qunawan.pojo.Orders">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 18 13:55:50 CST 2019.
    -->
    insert into orders (id, orderNo, trip, 
      num, start_time, go_point, 
      go_time, total_price, state, 
      create_time, user)
    values (#{id,jdbcType=INTEGER}, #{orderno,jdbcType=VARCHAR}, #{trip,jdbcType=INTEGER}, 
      #{num,jdbcType=INTEGER}, #{startTime,jdbcType=DATE}, #{goPoint,jdbcType=VARCHAR}, 
      #{goTime,jdbcType=VARCHAR}, #{totalPrice,jdbcType=REAL}, #{state,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{user,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.finalwork.qunawan.pojo.Orders">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 18 13:55:50 CST 2019.
    -->
    update orders
    set orderNo = #{orderno,jdbcType=VARCHAR},
      trip = #{trip,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=DATE},
      go_point = #{goPoint,jdbcType=VARCHAR},
      go_time = #{goTime,jdbcType=VARCHAR},
      total_price = #{totalPrice,jdbcType=REAL},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user = #{user,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 18 13:55:50 CST 2019.
    -->
    select id, orderNo, trip, num, start_time, go_point, go_time, total_price, state, 
    create_time, user
    from orders
  </select>
  <resultMap id="ProResultMap" type="com.finalwork.qunawan.pojo.Orders">

    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="orderNo" jdbcType="VARCHAR" property="orderno" />
    <result column="trip" jdbcType="INTEGER" property="trip" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="go_point" jdbcType="VARCHAR" property="goPoint" />
    <result column="total_price" jdbcType="REAL" property="totalPrice" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="osr" jdbcType="INTEGER" property="user" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <association property="sequence" javaType="com.finalwork.qunawan.pojo.Sequence">
      <id column="sd" property="id"/>
      <result column="se" property="value"/>
      <result column="sg" property="keying"/>
    </association>
  </resultMap>
  <select id="selectByUid" parameterType="Integer" resultMap="ProResultMap">
    select orders.id id, orderNo, trip, orders.num num, go_point, total_price, state, create_time, orders.`user` osr,
    trip.title content, s.id sd, s.`value` se , s.keying sg,start_time
    from (orders left join sequence as s on orders.state=s.id) left join trip on orders.trip=trip.id
    where orders.`user` =#{uid}
  </select>
  <update id="updateState" parameterType="Integer" >
    update orders set state=7 where id=#{oid}
  </update>

  <select id="selectByUserAndType"  resultType="int">
   select count(*) from orders where user=#{userid} and state=#{typeid}
  </select>
  <select id="selectOrdersByCondition" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 18 13:55:50 CST 2019.
    -->
    SELECT * FROM orders o
    LEFT JOIN user u ON o.user = u.id
    LEFT JOIN trip t ON o.trip = t.id
    WHERE o.user = #{userid} AND o.state =#{seqid}
  </select>
</mapper>